USE master;    IF EXISTS(SELECT 1 FROM sys.databases WHERE name = N'WideWorldImporters')  
BEGIN      
ALTER DATABASE WideWorldImporters 
SET SINGLE_USER WITH ROLLBACK IMMEDIATE;      
DROP DATABASE WideWorldImporters;  END;  GO    
CREATE DATABASE WideWorldImporters  ON PRIMARY  (       NAME = WWI_Primary,      
FILENAME = 'C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\WideWorldImporters.mdf',      SIZE = 1GB,      MAXSIZE = UNLIMITED,      
FILEGROWTH = 64MB  ),  
FILEGROUP USERDATA DEFAULT  (       NAME = WWI_UserData,      
FILENAME = 'C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\WideWorldImporters_UserData.ndf',      SIZE = 2GB,      MAXSIZE = UNLIMITED,      
FILEGROWTH = 64MB  )  
LOG ON  (      NAME = WWI_Log,      FILENAME = 'C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\WideWorldImporters.ldf',      
SIZE = 100MB,      MAXSIZE = UNLIMITED,      FILEGROWTH = 64MB  );  GO    
ALTER AUTHORIZATION ON DATABASE::WideWorldImporters to sa;  GO    
USE WideWorldImporters;  GO    
ALTER DATABASE CURRENT COLLATE Latin1_General_100_CI_AS;  GO    
ALTER DATABASE CURRENT SET RECOVERY SIMPLE;  GO    
ALTER DATABASE CURRENT SET AUTO_UPDATE_STATISTICS_ASYNC ON;  GO    
ALTER DATABASE CURRENT  SET QUERY_STORE  (      OPERATION_MODE = READ_WRITE,      CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30),      
DATA_FLUSH_INTERVAL_SECONDS = 3000,      MAX_STORAGE_SIZE_MB = 500,      INTERVAL_LENGTH_MINUTES = 15,      SIZE_BASED_CLEANUP_MODE = AUTO,      
QUERY_CAPTURE_MODE = AUTO,      MAX_PLANS_PER_QUERY = 1000  );  GO    
CREATE SCHEMA [Application] AUTHORIZATION dbo;  
GO  
EXEC sys.sp_addextendedproperty @name = N'Description', 
@value = N'Tables common across the application. Used for categorization and lookup lists, system parameters and people (users and contacts)', 
@level0type = N'SCHEMA', @level0name = 'Application';  GO    
CREATE SCHEMA [DataLoadSimulation] AUTHORIZATION dbo;  GO  
EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Tables and procedures used only during simulated data loading operations', 
@level0type = N'SCHEMA', @level0name = 'DataLoadSimulation';  GO    
CREATE SCHEMA [Integration] AUTHORIZATION dbo;  GO  
EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Tables and procedures required for integration with the data warehouse', 
@level0type = N'SCHEMA', @level0name = 'Integration';  GO    
CREATE SCHEMA [PowerBI] AUTHORIZATION dbo;  GO  
EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Views and stored procedures that provide the only access for the Power BI dashboard system', 
@level0type = N'SCHEMA', @level0name = 'PowerBI';  GO    
CREATE SCHEMA [Purchasing] AUTHORIZATION dbo;  GO  
EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Details of suppliers and of purchasing of stock items', 
@level0type = N'SCHEMA', @level0name = 'Purchasing';  GO    
CREATE SCHEMA [Reports] AUTHORIZATION dbo;  GO  
EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Views and stored procedures that provide the only access for the reporting system', 
@level0type = N'SCHEMA', @level0name = 'Reports';  GO    
CREATE SCHEMA [Sales] AUTHORIZATION dbo;  GO  
EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Details of customers, salespeople, and of sales of stock items', 
@level0type = N'SCHEMA', @level0name = 'Sales';  GO    
CREATE SCHEMA [Sequences] AUTHORIZATION dbo;  GO  
EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Holds sequences used by all tables in the application', 
@level0type = N'SCHEMA', @level0name = 'Sequences';  GO    
CREATE SCHEMA [Warehouse] AUTHORIZATION dbo;  GO  
EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Details of stock items, their holdings and transactions', 
@level0type = N'SCHEMA', @level0name = 'Warehouse';  GO    
CREATE SCHEMA [Website] AUTHORIZATION dbo;  GO  
EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Views and stored procedures that provide the only access for the application website', 
@level0type = N'SCHEMA', @level0name = 'Website';  GO      
CREATE SEQUENCE [Sequences].[BuyingGroupID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[CityID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[ColorID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[CountryID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[CustomerCategoryID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[CustomerID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[DeliveryMethodID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[InvoiceID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[InvoiceLineID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[OrderID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[OrderLineID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[PackageTypeID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[PaymentMethodID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[PersonID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[PurchaseOrderID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[PurchaseOrderLineID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[SpecialDealID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[StateProvinceID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[StockGroupID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[StockItemID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[StockItemStockGroupID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[SupplierCategoryID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[SupplierID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[SystemParameterID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[TransactionID] AS int START WITH 1;  
CREATE SEQUENCE [Sequences].[TransactionTypeID] AS int START WITH 1;  GO    
CREATE TABLE [Application].[People]  (      
[PersonID] int NOT NULL          CONSTRAINT [PK_Application_People] 
PRIMARY KEY          CONSTRAINT [DF_Application_People_PersonID]              DEFAULT(NEXT VALUE FOR [Sequences].[PersonID]),      
[FullName] nvarchar(50) NOT NULL,      
[PreferredName] nvarchar(50) NOT NULL,      
[SearchName] AS CONCAT([PreferredName], N' ', 
[FullName]) PERSISTED,      
[IsPermittedToLogon] bit NOT NULL,      
[LogonName] nvarchar(50) NULL,      
[IsExternalLogonProvider] bit NOT NULL,      
[HashedPassword] varbinary(max) NULL,      
[IsSystemUser] bit NOT NULL,      
[IsEmployee] bit NOT NULL,      
[IsSalesperson] bit NOT NULL,      
[UserPreferences] nvarchar(max) NULL,      
[PhoneNumber] nvarchar(20) NULL,      
[FaxNumber] nvarchar(20) NULL,      
[EmailAddress] nvarchar(256) NULL,      
[Photo] varbinary(max) NULL,      
[CustomFields] nvarchar(max) NULL,      
[OtherLanguages] AS JSON_QUERY([CustomFields], N'$.OtherLanguages'),      
[LastEditedBy] int NOT NULL          
CONSTRAINT [FK_Application_People_Application_People]              FOREIGN KEY REFERENCES [Application].[People] ([PersonID]),      
[ValidFrom] datetime2(7) GENERATED ALWAYS AS ROW START,      
[ValidTo] datetime2(7) GENERATED ALWAYS AS ROW END,      
PERIOD FOR SYSTEM_TIME ([ValidFrom],[ValidTo])  )  
WITH   (      SYSTEM_VERSIONING = ON (HISTORY_TABLE = [Application].[People_Archive])  );  
ALTER INDEX ix_People_Archive ON [Application].[People_Archive] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = NONE);  GO    
CREATE INDEX [IX_Application_People_IsEmployee]  ON [Application].[People]([IsEmployee]);  GO    
EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Allows quickly locating employees', 
@level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'People', 
@level2type = N'INDEX', @level2name = 'IX_Application_People_IsEmployee';    
CREATE INDEX [IX_Application_People_IsSalesperson]  ON [Application].[People]([IsSalesperson]);  GO    
EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Allows quickly locating salespeople', 
@level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'People', 
@level2type = N'INDEX', @level2name = 'IX_Application_People_IsSalesperson';    
CREATE INDEX [IX_Application_People_FullName]  ON [Application].[People]([FullName]);  GO    
EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Improves performance of name-related queries', 
@level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'People', 
@level2type = N'INDEX', @level2name = 'IX_Application_People_FullName';    
CREATE INDEX [IX_Application_People_Perf_20160301_05]  ON [Application].[People]([IsPermittedToLogon],[PersonID])  
INCLUDE ([FullName], [EmailAddress]);  GO    
EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Improves performance of order picking and invoicing', 
@level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'People', 
@level2type = N'INDEX', @level2name = 'IX_Application_People_Perf_20160301_05';    
EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'People known to the application (staff, customer contacts, supplier contacts)',
 @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'People';    
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Numeric ID used for reference to a person within the database', 
 @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'People', 
 @level2type = N'COLUMN', @level2name = 'PersonID';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Full name for this person', @level0type = N'SCHEMA', @level0name = 'Application', 
 @level1type = N'TABLE',  @level1name = 'People', @level2type = N'COLUMN', @level2name = 'FullName';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Name that this person prefers to be called', 
 @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'People', 
 @level2type = N'COLUMN', @level2name = 'PreferredName';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Name to build full text search on (computed column)', 
 @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'People', 
 @level2type = N'COLUMN', @level2name = 'SearchName';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Is this person permitted to log on?', 
 @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'People', 
 @level2type = N'COLUMN', @level2name = 'IsPermittedToLogon';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Person''s system logon name', @level0type = N'SCHEMA', @level0name = 'Application', 
 @level1type = N'TABLE',  @level1name = 'People', @level2type = N'COLUMN', @level2name = 'LogonName';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Is logon token provided by an external system?', 
 @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'People', 
 @level2type = N'COLUMN', @level2name = 'IsExternalLogonProvider';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Hash of password for users without external logon tokens', 
 @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'People', @level2type = N'COLUMN', @level2name = 'HashedPassword';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Is the currently permitted to make online access?', 
 @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'People', @level2type = N'COLUMN', @level2name = 'IsSystemUser';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Is this person an employee?', @level0type = N'SCHEMA', @level0name = 'Application', 
 @level1type = N'TABLE',  @level1name = 'People', @level2type = N'COLUMN', @level2name = 'IsEmployee';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Is this person a staff salesperson?', @level0type = N'SCHEMA', @level0name = 'Application', 
 @level1type = N'TABLE',  @level1name = 'People', @level2type = N'COLUMN', @level2name = 'IsSalesperson';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'User preferences related to the website (holds JSON data)', 
 @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'People', 
 @level2type = N'COLUMN', @level2name = 'UserPreferences';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Phone number', @level0type = N'SCHEMA', @level0name = 'Application', 
 @level1type = N'TABLE',  @level1name = 'People', @level2type = N'COLUMN', @level2name = 'PhoneNumber';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Fax number  ', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  
 @level1name = 'People', @level2type = N'COLUMN', @level2name = 'FaxNumber';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Email address for this person', @level0type = N'SCHEMA', @level0name = 'Application', 
 @level1type = N'TABLE',  @level1name = 'People', @level2type = N'COLUMN', @level2name = 'EmailAddress';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Photo of this person', @level0type = N'SCHEMA', @level0name = 'Application', 
 @level1type = N'TABLE',  @level1name = 'People', @level2type = N'COLUMN', @level2name = 'Photo';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Custom fields for employees and salespeople', 
 @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'People', 
 @level2type = N'COLUMN', @level2name = 'CustomFields';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Other languages spoken (computed column from custom fields)', 
 @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'People', @level2type = N'COLUMN', @level2name = 'OtherLanguages';  GO    
 CREATE TABLE [Warehouse].[ColdRoomTemperatures]  (      
 [ColdRoomTemperatureID] bigint NOT NULL IDENTITY(1,1)          CONSTRAINT [PK_Warehouse_ColdRoomTemperatures] PRIMARY KEY,      
 [ColdRoomSensorNumber] int NOT NULL,      
 [RecordedWhen] datetime2(7) NOT NULL,      
 [Temperature] decimal(10,2) NOT NULL,      
 [ValidFrom] datetime2(7) GENERATED ALWAYS AS ROW START,      
 [ValidTo] datetime2(7) GENERATED ALWAYS AS ROW END,      PERIOD FOR SYSTEM_TIME ([ValidFrom],[ValidTo])  )  
 WITH   (      SYSTEM_VERSIONING = ON (HISTORY_TABLE = [Warehouse].[ColdRoomTemperatures_Archive])  );  
 ALTER INDEX ix_ColdRoomTemperatures_Archive ON [Warehouse].[ColdRoomTemperatures_Archive] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = NONE);  GO    
 CREATE INDEX [IX_Warehouse_ColdRoomTemperatures_ColdRoomSensorNumber]  ON [Warehouse].[ColdRoomTemperatures]([ColdRoomSensorNumber]);  GO    
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Allows quickly locating sensors', @level0type = N'SCHEMA', @level0name = 'Warehouse', 
 @level1type = N'TABLE',  @level1name = 'ColdRoomTemperatures', @level2type = N'INDEX', @level2name = 'IX_Warehouse_ColdRoomTemperatures_ColdRoomSensorNumber';    
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Regularly recorded temperatures of cold room chillers', 
 @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'ColdRoomTemperatures';    
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Instantaneous temperature readings for cold rooms (chillers)', 
 @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'ColdRoomTemperatures', 
 @level2type = N'COLUMN', @level2name = 'ColdRoomTemperatureID';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Cold room sensor number', @level0type = N'SCHEMA', @level0name = 'Warehouse', 
 @level1type = N'TABLE',  @level1name = 'ColdRoomTemperatures', @level2type = N'COLUMN', @level2name = 'ColdRoomSensorNumber';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Time when this temperature recording was taken', 
 @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'ColdRoomTemperatures', 
 @level2type = N'COLUMN', @level2name = 'RecordedWhen';  
 EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Temperature at the time of recording', @level0type = N'SCHEMA', @level0name = 'Warehouse', 
 @level1type = N'TABLE',  @level1name = 'ColdRoomTemperatures', @level2type = N'COLUMN', @level2name = 'Temperature';  GO    
 CREATE TABLE [Warehouse].[VehicleTemperatures]  (      [VehicleTemperatureID] bigint NOT NULL IDENTITY(1,1)          CONSTRAINT [PK_Warehouse_VehicleTemperatures] PRIMARY KEY,      [VehicleRegistration] nvarchar(20) NOT NULL,      [ChillerSensorNumber] int NOT NULL,      [RecordedWhen] datetime2(7) NOT NULL,      [Temperature] decimal(10,2) NOT NULL,      [IsCompressed] bit NOT NULL,      [FullSensorData] nvarchar(1000) NULL,      [CompressedSensorData] varbinary(max) NULL  );  GO    EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Regularly recorded temperatures of vehicle chillers', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'VehicleTemperatures';    EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Instantaneous temperature readings for vehicle freezers and chillers', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'VehicleTemperatures', @level2type = N'COLUMN', @level2name = 'VehicleTemperatureID';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Vehicle registration number', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'VehicleTemperatures', @level2type = N'COLUMN', @level2name = 'VehicleRegistration';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Cold room sensor number', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'VehicleTemperatures', @level2type = N'COLUMN', @level2name = 'ChillerSensorNumber';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Time when this temperature recording was taken', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'VehicleTemperatures', @level2type = N'COLUMN', @level2name = 'RecordedWhen';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Temperature at the time of recording', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'VehicleTemperatures', @level2type = N'COLUMN', @level2name = 'Temperature';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Is the sensor data compressed for archival storage?', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'VehicleTemperatures', @level2type = N'COLUMN', @level2name = 'IsCompressed';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Full JSON data received from sensor', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'VehicleTemperatures', @level2type = N'COLUMN', @level2name = 'FullSensorData';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Compressed JSON data for archival purposes', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'VehicleTemperatures', @level2type = N'COLUMN', @level2name = 'CompressedSensorData';  GO    CREATE TABLE [Application].[Countries]  (      [CountryID] int NOT NULL          CONSTRAINT [PK_Application_Countries] PRIMARY KEY          CONSTRAINT [DF_Application_Countries_CountryID]              DEFAULT(NEXT VALUE FOR [Sequences].[CountryID]),      [CountryName] nvarchar(60) NOT NULL          CONSTRAINT [UQ_Application_Countries_CountryName] UNIQUE,      [FormalName] nvarchar(60) NOT NULL          CONSTRAINT [UQ_Application_Countries_FormalName] UNIQUE,      [IsoAlpha3Code] nvarchar(3) NULL,      [IsoNumericCode] int NULL,      [CountryType] nvarchar(20) NULL,      [LatestRecordedPopulation] bigint NULL,      [Continent] nvarchar(30) NOT NULL,      [Region] nvarchar(30) NOT NULL,      [Subregion] nvarchar(30) NOT NULL,      [Border] geography NULL,      [LastEditedBy] int NOT NULL          CONSTRAINT [FK_Application_Countries_Application_People]              FOREIGN KEY REFERENCES [Application].[People] ([PersonID]),      [ValidFrom] datetime2(7) GENERATED ALWAYS AS ROW START,      [ValidTo] datetime2(7) GENERATED ALWAYS AS ROW END,      PERIOD FOR SYSTEM_TIME ([ValidFrom],[ValidTo])  )  WITH   (      SYSTEM_VERSIONING = ON (HISTORY_TABLE = [Application].[Countries_Archive])  );  ALTER INDEX ix_Countries_Archive ON [Application].[Countries_Archive] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = NONE);  GO    EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Countries that contain the states or provinces (including geographic boundaries)', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'Countries';    EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Numeric ID used for reference to a country within the database', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'Countries', @level2type = N'COLUMN', @level2name = 'CountryID';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Name of the country', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'Countries', @level2type = N'COLUMN', @level2name = 'CountryName';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Full formal name of the country as agreed by United Nations', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'Countries', @level2type = N'COLUMN', @level2name = 'FormalName';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = '3 letter alphabetic code assigned to the country by ISO', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'Countries', @level2type = N'COLUMN', @level2name = 'IsoAlpha3Code';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Numeric code assigned to the country by ISO', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'Countries', @level2type = N'COLUMN', @level2name = 'IsoNumericCode';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Type of country or administrative region', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'Countries', @level2type = N'COLUMN', @level2name = 'CountryType';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Latest available population for the country', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'Countries', @level2type = N'COLUMN', @level2name = 'LatestRecordedPopulation';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Name of the continent', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'Countries', @level2type = N'COLUMN', @level2name = 'Continent';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Name of the region', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'Countries', @level2type = N'COLUMN', @level2name = 'Region';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Name of the subregion', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'Countries', @level2type = N'COLUMN', @level2name = 'Subregion';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Geographic border of the country as described by the United Nations', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'Countries', @level2type = N'COLUMN', @level2name = 'Border';  GO    CREATE TABLE [Application].[DeliveryMethods]  (      [DeliveryMethodID] int NOT NULL          CONSTRAINT [PK_Application_DeliveryMethods] PRIMARY KEY          CONSTRAINT [DF_Application_DeliveryMethods_DeliveryMethodID]              DEFAULT(NEXT VALUE FOR [Sequences].[DeliveryMethodID]),      [DeliveryMethodName] nvarchar(50) NOT NULL          CONSTRAINT [UQ_Application_DeliveryMethods_DeliveryMethodName] UNIQUE,      [LastEditedBy] int NOT NULL          CONSTRAINT [FK_Application_DeliveryMethods_Application_People]              FOREIGN KEY REFERENCES [Application].[People] ([PersonID]),      [ValidFrom] datetime2(7) GENERATED ALWAYS AS ROW START,      [ValidTo] datetime2(7) GENERATED ALWAYS AS ROW END,      PERIOD FOR SYSTEM_TIME ([ValidFrom],[ValidTo])  )  WITH   (      SYSTEM_VERSIONING = ON (HISTORY_TABLE = [Application].[DeliveryMethods_Archive])  );  ALTER INDEX ix_DeliveryMethods_Archive ON [Application].[DeliveryMethods_Archive] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = NONE);  GO    EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Ways that stock items can be delivered (ie: truck/van, post, pickup, courier, etc.', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'DeliveryMethods';    EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Numeric ID used for reference to a delivery method within the database', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'DeliveryMethods', @level2type = N'COLUMN', @level2name = 'DeliveryMethodID';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Full name of methods that can be used for delivery of customer orders', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'DeliveryMethods', @level2type = N'COLUMN', @level2name = 'DeliveryMethodName';  GO    CREATE TABLE [Application].[PaymentMethods]  (      [PaymentMethodID] int NOT NULL          CONSTRAINT [PK_Application_PaymentMethods] PRIMARY KEY          CONSTRAINT [DF_Application_PaymentMethods_PaymentMethodID]              DEFAULT(NEXT VALUE FOR [Sequences].[PaymentMethodID]),      [PaymentMethodName] nvarchar(50) NOT NULL          CONSTRAINT [UQ_Application_PaymentMethods_PaymentMethodName] UNIQUE,      [LastEditedBy] int NOT NULL          CONSTRAINT [FK_Application_PaymentMethods_Application_People]              FOREIGN KEY REFERENCES [Application].[People] ([PersonID]),      [ValidFrom] datetime2(7) GENERATED ALWAYS AS ROW START,      [ValidTo] datetime2(7) GENERATED ALWAYS AS ROW END,      PERIOD FOR SYSTEM_TIME ([ValidFrom],[ValidTo])  )  WITH   (      SYSTEM_VERSIONING = ON (HISTORY_TABLE = [Application].[PaymentMethods_Archive])  );  ALTER INDEX ix_PaymentMethods_Archive ON [Application].[PaymentMethods_Archive] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = NONE);  GO    EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Ways that payments can be made (ie: cash, check, EFT, etc.', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'PaymentMethods';    EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Numeric ID used for reference to a payment type within the database', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'PaymentMethods', @level2type = N'COLUMN', @level2name = 'PaymentMethodID';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Full name of ways that customers can make payments or that suppliers can be paid', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'PaymentMethods', @level2type = N'COLUMN', @level2name = 'PaymentMethodName';  GO    CREATE TABLE [Application].[TransactionTypes]  (      [TransactionTypeID] int NOT NULL          CONSTRAINT [PK_Application_TransactionTypes] PRIMARY KEY          CONSTRAINT [DF_Application_TransactionTypes_TransactionTypeID]              DEFAULT(NEXT VALUE FOR [Sequences].[TransactionTypeID]),      [TransactionTypeName] nvarchar(50) NOT NULL          CONSTRAINT [UQ_Application_TransactionTypes_TransactionTypeName] UNIQUE,      [LastEditedBy] int NOT NULL          CONSTRAINT [FK_Application_TransactionTypes_Application_People]              FOREIGN KEY REFERENCES [Application].[People] ([PersonID]),      [ValidFrom] datetime2(7) GENERATED ALWAYS AS ROW START,      [ValidTo] datetime2(7) GENERATED ALWAYS AS ROW END,      PERIOD FOR SYSTEM_TIME ([ValidFrom],[ValidTo])  )  WITH   (      SYSTEM_VERSIONING = ON (HISTORY_TABLE = [Application].[TransactionTypes_Archive])  );  ALTER INDEX ix_TransactionTypes_Archive ON [Application].[TransactionTypes_Archive] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = NONE);  GO    EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Types of customer, supplier, or stock transactions (ie: invoice, credit note, etc.)', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'TransactionTypes';    EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Numeric ID used for reference to a transaction type within the database', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'TransactionTypes', @level2type = N'COLUMN', @level2name = 'TransactionTypeID';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Full name of the transaction type', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'TransactionTypes', @level2type = N'COLUMN', @level2name = 'TransactionTypeName';  GO    CREATE TABLE [Purchasing].[SupplierCategories]  (      [SupplierCategoryID] int NOT NULL          CONSTRAINT [PK_Purchasing_SupplierCategories] PRIMARY KEY          CONSTRAINT [DF_Purchasing_SupplierCategories_SupplierCategoryID]              DEFAULT(NEXT VALUE FOR [Sequences].[SupplierCategoryID]),      [SupplierCategoryName] nvarchar(50) NOT NULL          CONSTRAINT [UQ_Purchasing_SupplierCategories_SupplierCategoryName] UNIQUE,      [LastEditedBy] int NOT NULL          CONSTRAINT [FK_Purchasing_SupplierCategories_Application_People]              FOREIGN KEY REFERENCES [Application].[People] ([PersonID]),      [ValidFrom] datetime2(7) GENERATED ALWAYS AS ROW START,      [ValidTo] datetime2(7) GENERATED ALWAYS AS ROW END,      PERIOD FOR SYSTEM_TIME ([ValidFrom],[ValidTo])  )  WITH   (      SYSTEM_VERSIONING = ON (HISTORY_TABLE = [Purchasing].[SupplierCategories_Archive])  );  ALTER INDEX ix_SupplierCategories_Archive ON [Purchasing].[SupplierCategories_Archive] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = NONE);  GO    EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Categories for suppliers (ie novelties, toys, clothing, packaging, etc.)', @level0type = N'SCHEMA', @level0name = 'Purchasing', @level1type = N'TABLE',  @level1name = 'SupplierCategories';    EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Numeric ID used for reference to a supplier category within the database', @level0type = N'SCHEMA', @level0name = 'Purchasing', @level1type = N'TABLE',  @level1name = 'SupplierCategories', @level2type = N'COLUMN', @level2name = 'SupplierCategoryID';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Full name of the category that suppliers can be assigned to', @level0type = N'SCHEMA', @level0name = 'Purchasing', @level1type = N'TABLE',  @level1name = 'SupplierCategories', @level2type = N'COLUMN', @level2name = 'SupplierCategoryName';  GO    CREATE TABLE [Sales].[BuyingGroups]  (      [BuyingGroupID] int NOT NULL          CONSTRAINT [PK_Sales_BuyingGroups] PRIMARY KEY          CONSTRAINT [DF_Sales_BuyingGroups_BuyingGroupID]              DEFAULT(NEXT VALUE FOR [Sequences].[BuyingGroupID]),      [BuyingGroupName] nvarchar(50) NOT NULL          CONSTRAINT [UQ_Sales_BuyingGroups_BuyingGroupName] UNIQUE,      [LastEditedBy] int NOT NULL          CONSTRAINT [FK_Sales_BuyingGroups_Application_People]              FOREIGN KEY REFERENCES [Application].[People] ([PersonID]),      [ValidFrom] datetime2(7) GENERATED ALWAYS AS ROW START,      [ValidTo] datetime2(7) GENERATED ALWAYS AS ROW END,      PERIOD FOR SYSTEM_TIME ([ValidFrom],[ValidTo])  )  WITH   (      SYSTEM_VERSIONING = ON (HISTORY_TABLE = [Sales].[BuyingGroups_Archive])  );  ALTER INDEX ix_BuyingGroups_Archive ON [Sales].[BuyingGroups_Archive] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = NONE);  GO    EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Customer organizations can be part of groups that exert greater buying power', @level0type = N'SCHEMA', @level0name = 'Sales', @level1type = N'TABLE',  @level1name = 'BuyingGroups';    EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Numeric ID used for reference to a buying group within the database', @level0type = N'SCHEMA', @level0name = 'Sales', @level1type = N'TABLE',  @level1name = 'BuyingGroups', @level2type = N'COLUMN', @level2name = 'BuyingGroupID';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Full name of a buying group that customers can be members of', @level0type = N'SCHEMA', @level0name = 'Sales', @level1type = N'TABLE',  @level1name = 'BuyingGroups', @level2type = N'COLUMN', @level2name = 'BuyingGroupName';  GO    CREATE TABLE [Sales].[CustomerCategories]  (      [CustomerCategoryID] int NOT NULL          CONSTRAINT [PK_Sales_CustomerCategories] PRIMARY KEY          CONSTRAINT [DF_Sales_CustomerCategories_CustomerCategoryID]              DEFAULT(NEXT VALUE FOR [Sequences].[CustomerCategoryID]),      [CustomerCategoryName] nvarchar(50) NOT NULL          CONSTRAINT [UQ_Sales_CustomerCategories_CustomerCategoryName] UNIQUE,      [LastEditedBy] int NOT NULL          CONSTRAINT [FK_Sales_CustomerCategories_Application_People]              FOREIGN KEY REFERENCES [Application].[People] ([PersonID]),      [ValidFrom] datetime2(7) GENERATED ALWAYS AS ROW START,      [ValidTo] datetime2(7) GENERATED ALWAYS AS ROW END,      PERIOD FOR SYSTEM_TIME ([ValidFrom],[ValidTo])  )  WITH   (      SYSTEM_VERSIONING = ON (HISTORY_TABLE = [Sales].[CustomerCategories_Archive])  );  ALTER INDEX ix_CustomerCategories_Archive ON [Sales].[CustomerCategories_Archive] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = NONE);  GO    EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Categories for customers (ie restaurants, cafes, supermarkets, etc.)', @level0type = N'SCHEMA', @level0name = 'Sales', @level1type = N'TABLE',  @level1name = 'CustomerCategories';    EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Numeric ID used for reference to a customer category within the database', @level0type = N'SCHEMA', @level0name = 'Sales', @level1type = N'TABLE',  @level1name = 'CustomerCategories', @level2type = N'COLUMN', @level2name = 'CustomerCategoryID';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Full name of the category that customers can be assigned to', @level0type = N'SCHEMA', @level0name = 'Sales', @level1type = N'TABLE',  @level1name = 'CustomerCategories', @level2type = N'COLUMN', @level2name = 'CustomerCategoryName';  GO    CREATE TABLE [Warehouse].[Colors]  (      [ColorID] int NOT NULL          CONSTRAINT [PK_Warehouse_Colors] PRIMARY KEY          CONSTRAINT [DF_Warehouse_Colors_ColorID]              DEFAULT(NEXT VALUE FOR [Sequences].[ColorID]),      [ColorName] nvarchar(20) NOT NULL          CONSTRAINT [UQ_Warehouse_Colors_ColorName] UNIQUE,      [LastEditedBy] int NOT NULL          CONSTRAINT [FK_Warehouse_Colors_Application_People]              FOREIGN KEY REFERENCES [Application].[People] ([PersonID]),      [ValidFrom] datetime2(7) GENERATED ALWAYS AS ROW START,      [ValidTo] datetime2(7) GENERATED ALWAYS AS ROW END,      PERIOD FOR SYSTEM_TIME ([ValidFrom],[ValidTo])  )  WITH   (      SYSTEM_VERSIONING = ON (HISTORY_TABLE = [Warehouse].[Colors_Archive])  );  ALTER INDEX ix_Colors_Archive ON [Warehouse].[Colors_Archive] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = NONE);  GO    EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Stock items can (optionally) have colors', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'Colors';    EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Numeric ID used for reference to a color within the database', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'Colors', @level2type = N'COLUMN', @level2name = 'ColorID';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Full name of a color that can be used to describe stock items', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'Colors', @level2type = N'COLUMN', @level2name = 'ColorName';  GO    CREATE TABLE [Warehouse].[PackageTypes]  (      [PackageTypeID] int NOT NULL          CONSTRAINT [PK_Warehouse_PackageTypes] PRIMARY KEY          CONSTRAINT [DF_Warehouse_PackageTypes_PackageTypeID]              DEFAULT(NEXT VALUE FOR [Sequences].[PackageTypeID]),      [PackageTypeName] nvarchar(50) NOT NULL          CONSTRAINT [UQ_Warehouse_PackageTypes_PackageTypeName] UNIQUE,      [LastEditedBy] int NOT NULL          CONSTRAINT [FK_Warehouse_PackageTypes_Application_People]              FOREIGN KEY REFERENCES [Application].[People] ([PersonID]),      [ValidFrom] datetime2(7) GENERATED ALWAYS AS ROW START,      [ValidTo] datetime2(7) GENERATED ALWAYS AS ROW END,      PERIOD FOR SYSTEM_TIME ([ValidFrom],[ValidTo])  )  WITH   (      SYSTEM_VERSIONING = ON (HISTORY_TABLE = [Warehouse].[PackageTypes_Archive])  );  ALTER INDEX ix_PackageTypes_Archive ON [Warehouse].[PackageTypes_Archive] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = NONE);  GO    EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Ways that stock items can be packaged (ie: each, box, carton, pallet, kg, etc.', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'PackageTypes';    EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Numeric ID used for reference to a package type within the database', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'PackageTypes', @level2type = N'COLUMN', @level2name = 'PackageTypeID';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Full name of package types that stock items can be purchased in or sold in', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'PackageTypes', @level2type = N'COLUMN', @level2name = 'PackageTypeName';  GO    CREATE TABLE [Warehouse].[StockGroups]  (      [StockGroupID] int NOT NULL          CONSTRAINT [PK_Warehouse_StockGroups] PRIMARY KEY          CONSTRAINT [DF_Warehouse_StockGroups_StockGroupID]              DEFAULT(NEXT VALUE FOR [Sequences].[StockGroupID]),      [StockGroupName] nvarchar(50) NOT NULL          CONSTRAINT [UQ_Warehouse_StockGroups_StockGroupName] UNIQUE,      [LastEditedBy] int NOT NULL          CONSTRAINT [FK_Warehouse_StockGroups_Application_People]              FOREIGN KEY REFERENCES [Application].[People] ([PersonID]),      [ValidFrom] datetime2(7) GENERATED ALWAYS AS ROW START,      [ValidTo] datetime2(7) GENERATED ALWAYS AS ROW END,      PERIOD FOR SYSTEM_TIME ([ValidFrom],[ValidTo])  )  WITH   (      SYSTEM_VERSIONING = ON (HISTORY_TABLE = [Warehouse].[StockGroups_Archive])  );  ALTER INDEX ix_StockGroups_Archive ON [Warehouse].[StockGroups_Archive] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = NONE);  GO    EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'Groups for categorizing stock items (ie: novelties, toys, edible novelties, etc.)', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'StockGroups';    EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Numeric ID used for reference to a stock group within the database', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'StockGroups', @level2type = N'COLUMN', @level2name = 'StockGroupID';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Full name of groups used to categorize stock items', @level0type = N'SCHEMA', @level0name = 'Warehouse', @level1type = N'TABLE',  @level1name = 'StockGroups', @level2type = N'COLUMN', @level2name = 'StockGroupName';  GO    CREATE TABLE [Application].[StateProvinces]  (      [StateProvinceID] int NOT NULL          CONSTRAINT [PK_Application_StateProvinces] PRIMARY KEY          CONSTRAINT [DF_Application_StateProvinces_StateProvinceID]              DEFAULT(NEXT VALUE FOR [Sequences].[StateProvinceID]),      [StateProvinceCode] nvarchar(5) NOT NULL,      [StateProvinceName] nvarchar(50) NOT NULL          CONSTRAINT [UQ_Application_StateProvinces_StateProvinceName] UNIQUE,      [CountryID] int NOT NULL          CONSTRAINT [FK_Application_StateProvinces_CountryID_Application_Countries]              FOREIGN KEY REFERENCES [Application].[Countries] ([CountryID]),      [SalesTerritory] nvarchar(50) NOT NULL,      [Border] geography NULL,      [LatestRecordedPopulation] bigint NULL,      [LastEditedBy] int NOT NULL          CONSTRAINT [FK_Application_StateProvinces_Application_People]              FOREIGN KEY REFERENCES [Application].[People] ([PersonID]),      [ValidFrom] datetime2(7) GENERATED ALWAYS AS ROW START,      [ValidTo] datetime2(7) GENERATED ALWAYS AS ROW END,      PERIOD FOR SYSTEM_TIME ([ValidFrom],[ValidTo])  )  WITH   (      SYSTEM_VERSIONING = ON (HISTORY_TABLE = [Application].[StateProvinces_Archive])  );  ALTER INDEX ix_StateProvinces_Archive ON [Application].[StateProvinces_Archive] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = NONE);  GO    CREATE INDEX [FK_Application_StateProvinces_CountryID]  ON [Application].[StateProvinces] ([CountryID]);  GO    CREATE INDEX [IX_Application_StateProvinces_SalesTerritory]  ON [Application].[StateProvinces]([SalesTerritory]);  GO    EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Index used to quickly locate sales territories', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'StateProvinces', @level2type = N'INDEX', @level2name = 'IX_Application_StateProvinces_SalesTerritory';    EXEC sys.sp_addextendedproperty @name = N'Description', @value = N'States or provinces that contain cities (including geographic location)', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'StateProvinces';    EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Numeric ID used for reference to a state or province within the database', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'StateProvinces', @level2type = N'COLUMN', @level2name = 'StateProvinceID';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Common code for this state or province (such as WA - Washington for the USA)', @level0type = N'SCHEMA', @level0name = 'Application', @level1type = N'TABLE',  @level1name = 'StateProvinces', @level2type = N'COLUMN', @level2name = 'StateProvinceCode';  EXEC sys.sp_addextendedproperty @name = N'Description', @value = 'Formal name of the state or province', @level0typ
